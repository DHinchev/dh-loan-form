{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\ezbob-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\ezbob-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\ezbob-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\ezbob-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\ezbob-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\ezbob-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\ezbob-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\ezbob-loan-form\\\\src\\\\components\\\\loan-form.js\";\nimport React, { Component } from 'react';\nimport Postcode from 'postcode-validator';\nimport Data from '../assets/data/data.json';\nimport InputField from './input-field';\nimport DropdownField from './dropdown-field';\nimport FormConsentDetails from './form-consent-details';\nimport FormHead from './form-head';\nvar checkEmailValidity = RegExp( // eslint-disable-next-line \n/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\nvar checkDateOfBirthValidity = RegExp( // eslint-disable-next-line \n/^(0[1-9]|[12][0-9]|3[01])[\\- \\/.](?:(0[1-9]|1[012])[\\- \\/.](19|20)[0-9]{2})$/);\n\nvar LoanForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoanForm, _Component);\n\n  function LoanForm() {\n    var _this;\n\n    _classCallCheck(this, LoanForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoanForm).call(this));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n\n      var formErrors = _objectSpread({}, _this.state.formErrors);\n\n      switch (name) {\n        case 'firstName':\n          _this.setState({});\n\n          formErrors.firstName = value.length < 3 && typeof value !== 'string' ? 'minimum 3 characaters required' : '';\n          break;\n\n        case 'surname':\n          formErrors.surnameError = value.length < 3 && typeof value !== 'string' ? 'minimum 3 characaters required' : '';\n          break;\n\n        case 'email':\n          formErrors.emailError = checkEmailValidity.test(value) ? '' : 'invalid email address';\n          break;\n\n        case 'postcode':\n          formErrors.postcodeError = value.length < 6 && Postcode.validate(value, _this.state.countryPostcode) ? 'minimum 6 characaters required or invalid postcode' : '';\n          break;\n\n        case 'dateOfBirth':\n          formErrors.dateOfBirthError = _this.checkDateOfBirthIsValid(value) ? 'Field is empty or date format is wrong' : '';\n          break;\n\n        case 'companyName':\n          formErrors.companyNameError = value.length < 3 && typeof value !== 'string' ? 'minimum 3 characaters required' : '';\n          break;\n\n        case 'loanAmout':\n          formErrors.loanAmoutError = value.length < 5 && typeof value !== 'number' ? 'minimum loan amount is 10 000' : '';\n          break;\n\n        case 'annualTurnover':\n          formErrors.password = value.length < 5 && typeof value !== 'number' ? 'minimum turnover amount is 15 000' : '';\n          break;\n\n        case 'loanTerm':\n          formErrors.loanTermError = value !== '' ? 'minimum 6 characaters required' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      _this.setState(_defineProperty({\n        formErrors: formErrors\n      }, name, value), function () {\n        return console.log(formErrors);\n      });\n    };\n\n    _this.generateMonthsOptions = function () {\n      var min;\n      var max;\n      Data.loanForm.forEach(function (sections) {\n        sections.fields.forEach(function (field) {\n          'minMonths' in field ? min = field.minMonths : min = 12;\n          'maxMonths' in field ? max = field.maxMonths + 1 : max = 61;\n        });\n      });\n      return Array.from(Array(max - min).keys()).map(function (i) {\n        return min + i;\n      });\n    };\n\n    _this.checkDateOfBirthIsValid = function (date) {\n      var today = new Date();\n      date = Date.parse(date);\n\n      if (date === \"\") {\n        return false;\n      } else if (checkDateOfBirthValidity.test(date)) {\n        return true;\n      }\n\n      if (today <= date) {\n        console.log(\"Current or future date is not allowed.\");\n        return false;\n      }\n    };\n\n    _this.state = {\n      firstName: '',\n      surname: '',\n      dateOfBirth: '',\n      email: '',\n      postcode: '',\n      companyName: '',\n      annualTurnover: '',\n      loanAmout: '',\n      loanTerm: '',\n      countryPostcode: 'UK',\n      formErrors: {\n        firstName: '',\n        surnameError: '',\n        dateOfBirthError: '',\n        emailError: '',\n        postcodeError: '',\n        companyNameError: '',\n        annualTurnoverError: '',\n        loanAmoutError: '',\n        loanTermError: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(LoanForm, [{\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      var _this$state = this.state,\n          firstName = _this$state.firstName,\n          surname = _this$state.surname,\n          dateOfBirth = _this$state.dateOfBirth,\n          email = _this$state.email,\n          postcode = _this$state.postcode,\n          companyName = _this$state.companyName,\n          annualTurnover = _this$state.annualTurnover,\n          loanAmout = _this$state.loanAmout,\n          loanTerm = _this$state.loanTerm,\n          formErrors = _this$state.formErrors;\n      return React.createElement(\"div\", {\n        className: \"loan-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(FormHead, {\n        title: 'Get your Instant quote',\n        subtitle: \"We only need a few details and it won't affect your credit score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), formErrors.firstName, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"loan-form-main-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(InputField, {\n        fieldLabel: 'First name',\n        fieldValue: firstName,\n        fieldName: 'firstName',\n        fieldError: formErrors.firstName,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: 'Surname',\n        fieldValue: surname,\n        fieldName: 'Surname',\n        fieldError: formErrors.surnameError,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(InputField, (_React$createElement = {\n        fieldLabel: 'Email',\n        fieldValue: email,\n        fieldName: 'email',\n        fieldError: formErrors.firstNameError,\n        fieldDetails: 'You must be director of limited company registered at Company House'\n      }, _defineProperty(_React$createElement, \"fieldError\", formErrors.emailError), _defineProperty(_React$createElement, \"onChange\", this.handleInputChange), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)), React.createElement(InputField, {\n        fieldLabel: 'Date of birth',\n        fieldValue: dateOfBirth,\n        fieldName: 'dateOfBirth',\n        fieldDetails: 'You must be 18 years or older to apply for ezbob loan',\n        fieldError: formErrors.dateOfBirthError,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: 'Residential postcode',\n        fieldValue: postcode,\n        fieldName: 'postcode',\n        fieldDetails: 'You must be UK resident',\n        fieldError: formErrors.postcodeError,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: 'Company name',\n        fieldValue: companyName,\n        fieldName: 'companyName',\n        fieldError: formErrors.companyNameError,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: 'Annual turnover',\n        fieldValue: annualTurnover,\n        fieldName: 'annualTurnover',\n        fieldDetails: 'Your company must have a current annual turnover of 15k or moret',\n        fieldError: formErrors.annualTurnoverError,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: 'Loan ammount',\n        fieldValue: loanAmout,\n        fieldName: 'loanAmout',\n        fieldDetails: '£10,000 - £150,000',\n        fieldError: formErrors.loanAmoutError,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(DropdownField, {\n        fieldLabel: 'Loan term',\n        fieldValue: loanTerm,\n        fieldName: 'loanTerm',\n        arrayOptions: this.generateMonthsOptions(),\n        fieldError: formErrors.loanTermError,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      })), React.createElement(FormConsentDetails, {\n        consentText: Data.loanForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"loan-form-submit-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"loan-form-submit-button\",\n        type: \"submit\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Consent & Submit\"))));\n    }\n  }]);\n\n  return LoanForm;\n}(Component);\n\nexport default LoanForm;","map":{"version":3,"sources":["C:\\Users\\natha\\Documents\\GitHub\\ezbob-loan-form\\src\\components\\loan-form.js"],"names":["React","Component","Postcode","Data","InputField","DropdownField","FormConsentDetails","FormHead","checkEmailValidity","RegExp","checkDateOfBirthValidity","LoanForm","handleSubmit","e","preventDefault","handleInputChange","event","target","value","name","formErrors","state","setState","firstName","length","surnameError","emailError","test","postcodeError","validate","countryPostcode","dateOfBirthError","checkDateOfBirthIsValid","companyNameError","loanAmoutError","password","loanTermError","console","log","generateMonthsOptions","min","max","loanForm","forEach","sections","fields","field","minMonths","maxMonths","Array","from","keys","map","i","date","today","Date","parse","surname","dateOfBirth","email","postcode","companyName","annualTurnover","loanAmout","loanTerm","annualTurnoverError","firstNameError"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,kBAAP,MAA+B,wBAA/B;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,IAAMC,kBAAkB,GAAGC,MAAM,EAC7B;AACA,wJAF6B,CAAjC;AAKA,IAAMC,wBAAwB,GAAGD,MAAM,EACnC;AACA,8EAFmC,CAAvC;;IAMME,Q;;;;;AACF,sBAAc;AAAA;;AAAA;;AACV;;AADU,UA2BdC,YA3Bc,GA2BC,UAACC,CAAD,EAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACH,KA7Ba;;AAAA,UA+BdC,iBA/Bc,GA+BM,UAACC,KAAD,EAAW;AAAA,0BACHA,KAAK,CAACC,MADH;AAAA,UACnBC,KADmB,iBACnBA,KADmB;AAAA,UACZC,IADY,iBACZA,IADY;;AAE3B,UAAIC,UAAU,qBAAQ,MAAKC,KAAL,CAAWD,UAAnB,CAAd;;AAEA,cAAQD,IAAR;AACI,aAAK,WAAL;AACA,gBAAKG,QAAL,CAAc,EAAd;;AAGEF,UAAAA,UAAU,CAACG,SAAX,GACEL,KAAK,CAACM,MAAN,GAAe,CAAf,IAAqB,OAAON,KAAR,KAAmB,QAAvC,GAAkD,gCAAlD,GAAqF,EADvF;AAEA;;AACF,aAAK,SAAL;AACEE,UAAAA,UAAU,CAACK,YAAX,GACEP,KAAK,CAACM,MAAN,GAAe,CAAf,IAAqB,OAAON,KAAR,KAAmB,QAAvC,GAAkD,gCAAlD,GAAqF,EADvF;AAEA;;AACF,aAAK,OAAL;AACEE,UAAAA,UAAU,CAACM,UAAX,GAAwBlB,kBAAkB,CAACmB,IAAnB,CAAwBT,KAAxB,IAAiC,EAAjC,GAAsC,uBAA9D;AACA;;AACF,aAAK,UAAL;AACEE,UAAAA,UAAU,CAACQ,aAAX,GAA2BV,KAAK,CAACM,MAAN,GAAe,CAAf,IAAoBtB,QAAQ,CAAC2B,QAAT,CAAkBX,KAAlB,EAAyB,MAAKG,KAAL,CAAWS,eAApC,CAApB,GAA2E,oDAA3E,GAAkI,EAA7J;AACA;;AACF,aAAK,aAAL;AACIV,UAAAA,UAAU,CAACW,gBAAX,GAA8B,MAAKC,uBAAL,CAA6Bd,KAA7B,IAAsC,wCAAtC,GAAiF,EAA/G;AACF;;AACF,aAAK,aAAL;AACIE,UAAAA,UAAU,CAACa,gBAAX,GAA8Bf,KAAK,CAACM,MAAN,GAAe,CAAf,IAAqB,OAAON,KAAR,KAAmB,QAAvC,GAAkD,gCAAlD,GAAqF,EAAnH;AACF;;AACF,aAAK,WAAL;AACIE,UAAAA,UAAU,CAACc,cAAX,GAA4BhB,KAAK,CAACM,MAAN,GAAe,CAAf,IAAqB,OAAON,KAAR,KAAmB,QAAvC,GAAkD,+BAAlD,GAAoF,EAAhH;AACF;;AACF,aAAK,gBAAL;AACIE,UAAAA,UAAU,CAACe,QAAX,GAAsBjB,KAAK,CAACM,MAAN,GAAe,CAAf,IAAqB,OAAON,KAAR,KAAmB,QAAvC,GAAkD,mCAAlD,GAAwF,EAA9G;AACF;;AACF,aAAK,UAAL;AACIE,UAAAA,UAAU,CAACgB,aAAX,GAA2BlB,KAAK,KAAK,EAAV,GAAe,gCAAf,GAAkD,EAA7E;AACF;;AACF;AACE;AAlCN;;AAqCA,YAAKI,QAAL;AAAgBF,QAAAA,UAAU,EAAVA;AAAhB,SAA6BD,IAA7B,EAAoCD,KAApC,GAA6C;AAAA,eAAMmB,OAAO,CAACC,GAAR,CAAYlB,UAAZ,CAAN;AAAA,OAA7C;AACH,KAzEa;;AAAA,UA4EdmB,qBA5Ec,GA4EU,YAAM;AAC1B,UAAIC,GAAJ;AACA,UAAIC,GAAJ;AACAtC,MAAAA,IAAI,CAACuC,QAAL,CAAcC,OAAd,CAAsB,UAAAC,QAAQ,EAAI;AAC9BA,QAAAA,QAAQ,CAACC,MAAT,CAAgBF,OAAhB,CAAwB,UAAAG,KAAK,EAAI;AAC5B,yBAAeA,KAAhB,GAAyBN,GAAG,GAAGM,KAAK,CAACC,SAArC,GAAiDP,GAAG,GAAG,EAAvD;AACC,yBAAeM,KAAhB,GAAyBL,GAAG,GAAGK,KAAK,CAACE,SAAN,GAAkB,CAAjD,GAAqDP,GAAG,GAAG,EAA3D;AACH,SAHD;AAIH,OALD;AAOA,aAAQQ,KAAK,CAACC,IAAN,CAAWD,KAAK,CAACR,GAAG,GAACD,GAAL,CAAL,CAAeW,IAAf,EAAX,EAAkCC,GAAlC,CAAsC,UAAAC,CAAC;AAAA,eAAIb,GAAG,GAAGa,CAAV;AAAA,OAAvC,CAAR;AACF,KAvFY;;AAAA,UAyFbrB,uBAzFa,GAyFa,UAACsB,IAAD,EAAU;AACjC,UAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACAF,MAAAA,IAAI,GAAGE,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAP;;AAEA,UAAIA,IAAI,KAAK,EAAb,EAAiB;AACb,eAAO,KAAP;AACH,OAFD,MAGK,IAAI5C,wBAAwB,CAACiB,IAAzB,CAA8B2B,IAA9B,CAAJ,EAAyC;AAC1C,eAAO,IAAP;AACH;;AAED,UAAIC,KAAK,IAAID,IAAb,EAAmB;AACfjB,QAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACA,eAAO,KAAP;AACH;AACJ,KAxGa;;AAEV,UAAKjB,KAAL,GAAa;AACTE,MAAAA,SAAS,EAAE,EADF;AAETmC,MAAAA,OAAO,EAAE,EAFA;AAGTC,MAAAA,WAAW,EAAE,EAHJ;AAITC,MAAAA,KAAK,EAAE,EAJE;AAKTC,MAAAA,QAAQ,EAAE,EALD;AAMTC,MAAAA,WAAW,EAAE,EANJ;AAOTC,MAAAA,cAAc,EAAE,EAPP;AAQTC,MAAAA,SAAS,EAAE,EARF;AASTC,MAAAA,QAAQ,EAAE,EATD;AAUTnC,MAAAA,eAAe,EAAE,IAVR;AAWTV,MAAAA,UAAU,EAAE;AACRG,QAAAA,SAAS,EAAE,EADH;AAERE,QAAAA,YAAY,EAAE,EAFN;AAGRM,QAAAA,gBAAgB,EAAE,EAHV;AAIRL,QAAAA,UAAU,EAAE,EAJJ;AAKRE,QAAAA,aAAa,EAAE,EALP;AAMRK,QAAAA,gBAAgB,EAAE,EANV;AAORiC,QAAAA,mBAAmB,EAAE,EAPb;AAQRhC,QAAAA,cAAc,EAAE,EARR;AASRE,QAAAA,aAAa,EAAE;AATP;AAXH,KAAb;AAFU;AAyBb;;;;6BAiFQ;AAAA;;AAAA,wBAEkH,KAAKf,KAFvH;AAAA,UAEAE,SAFA,eAEAA,SAFA;AAAA,UAEWmC,OAFX,eAEWA,OAFX;AAAA,UAEoBC,WAFpB,eAEoBA,WAFpB;AAAA,UAEiCC,KAFjC,eAEiCA,KAFjC;AAAA,UAEwCC,QAFxC,eAEwCA,QAFxC;AAAA,UAEkDC,WAFlD,eAEkDA,WAFlD;AAAA,UAE+DC,cAF/D,eAE+DA,cAF/D;AAAA,UAE+EC,SAF/E,eAE+EA,SAF/E;AAAA,UAE0FC,QAF1F,eAE0FA,QAF1F;AAAA,UAEoG7C,UAFpG,eAEoGA,UAFpG;AAIP,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,wBAAjB;AAA2C,QAAA,QAAQ,oEAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEPA,UAAU,CAACG,SAFJ,EAGI;AAAM,QAAA,QAAQ,EAAE,KAAKX,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,UAAU,EAAE,YAAxB;AACY,QAAA,UAAU,EAAEW,SADxB;AAEY,QAAA,SAAS,EAAE,WAFvB;AAGY,QAAA,UAAU,EAAEH,UAAU,CAACG,SAHnC;AAIY,QAAA,QAAQ,EAAE,KAAKR,iBAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAMI,oBAAC,UAAD;AAAY,QAAA,UAAU,EAAE,SAAxB;AACY,QAAA,UAAU,EAAE2C,OADxB;AAEY,QAAA,SAAS,EAAE,SAFvB;AAGY,QAAA,UAAU,EAAEtC,UAAU,CAACK,YAHnC;AAIY,QAAA,QAAQ,EAAE,KAAKV,iBAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAWI,oBAAC,UAAD;AAAY,QAAA,UAAU,EAAE,OAAxB;AACY,QAAA,UAAU,EAAE6C,KADxB;AAEY,QAAA,SAAS,EAAE,OAFvB;AAGY,QAAA,UAAU,EAAExC,UAAU,CAAC+C,cAHnC;AAIY,QAAA,YAAY,EAAE;AAJ1B,6DAKwB/C,UAAU,CAACM,UALnC,qDAMsB,KAAKX,iBAN3B;AAAA;AAAA;AAAA,uFAXJ,EAkBI,oBAAC,UAAD;AAAY,QAAA,UAAU,EAAE,eAAxB;AACY,QAAA,UAAU,EAAE4C,WADxB;AAEY,QAAA,SAAS,EAAE,aAFvB;AAGY,QAAA,YAAY,EAAE,uDAH1B;AAIY,QAAA,UAAU,EAAEvC,UAAU,CAACW,gBAJnC;AAKY,QAAA,QAAQ,EAAE,KAAKhB,iBAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBJ,EAwBI,oBAAC,UAAD;AAAY,QAAA,UAAU,EAAE,sBAAxB;AACY,QAAA,UAAU,EAAE8C,QADxB;AAEY,QAAA,SAAS,EAAE,UAFvB;AAGY,QAAA,YAAY,EAAE,yBAH1B;AAIY,QAAA,UAAU,EAAEzC,UAAU,CAACQ,aAJnC;AAKY,QAAA,QAAQ,EAAE,KAAKb,iBAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxBJ,EA8BI,oBAAC,UAAD;AAAY,QAAA,UAAU,EAAE,cAAxB;AACY,QAAA,UAAU,EAAE+C,WADxB;AAEY,QAAA,SAAS,EAAE,aAFvB;AAGY,QAAA,UAAU,EAAE1C,UAAU,CAACa,gBAHnC;AAIY,QAAA,QAAQ,EAAE,KAAKlB,iBAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9BJ,EAmCI,oBAAC,UAAD;AAAY,QAAA,UAAU,EAAE,iBAAxB;AACY,QAAA,UAAU,EAAEgD,cADxB;AAEY,QAAA,SAAS,EAAE,gBAFvB;AAGY,QAAA,YAAY,EAAE,kEAH1B;AAIY,QAAA,UAAU,EAAE3C,UAAU,CAAC8C,mBAJnC;AAKY,QAAA,QAAQ,EAAE,KAAKnD,iBAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnCJ,EAyCI,oBAAC,UAAD;AAAY,QAAA,UAAU,EAAE,cAAxB;AACY,QAAA,UAAU,EAAEiD,SADxB;AAEY,QAAA,SAAS,EAAE,WAFvB;AAGY,QAAA,YAAY,EAAE,oBAH1B;AAIY,QAAA,UAAU,EAAE5C,UAAU,CAACc,cAJnC;AAKY,QAAA,QAAQ,EAAE,KAAKnB,iBAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzCJ,EA+CI,oBAAC,aAAD;AAAe,QAAA,UAAU,EAAE,WAA3B;AACe,QAAA,UAAU,EAAEkD,QAD3B;AAEe,QAAA,SAAS,EAAE,UAF1B;AAGe,QAAA,YAAY,EAAE,KAAK1B,qBAAL,EAH7B;AAIe,QAAA,UAAU,EAAEnB,UAAU,CAACgB,aAJtC;AAKe,QAAA,QAAQ,EAAE,KAAKrB,iBAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/CJ,CADJ,EAwDI,oBAAC,kBAAD;AAAoB,QAAA,WAAW,EAAEZ,IAAI,CAACuC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxDJ,EA0DI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,yBAAlB;AAA4C,QAAA,IAAI,EAAC,QAAjD;AAA0D,QAAA,OAAO,EAAE,KAAK9B,YAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CA1DJ,CAHJ,CADF;AAoED;;;;EAnLkBX,S;;AAsLrB,eAAeU,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Postcode from 'postcode-validator';\r\nimport Data from '../assets/data/data.json';\r\nimport InputField from './input-field';\r\nimport DropdownField from './dropdown-field';\r\nimport FormConsentDetails from './form-consent-details';\r\nimport FormHead from './form-head';\r\n\r\nconst checkEmailValidity = RegExp(\r\n    // eslint-disable-next-line \r\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n);\r\n\r\nconst checkDateOfBirthValidity = RegExp(\r\n    // eslint-disable-next-line \r\n    /^(0[1-9]|[12][0-9]|3[01])[\\- \\/.](?:(0[1-9]|1[012])[\\- \\/.](19|20)[0-9]{2})$/\r\n);\r\n\r\n\r\nclass LoanForm extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            firstName: '',\r\n            surname: '',\r\n            dateOfBirth: '',\r\n            email: '',\r\n            postcode: '',\r\n            companyName: '',\r\n            annualTurnover: '',\r\n            loanAmout: '',\r\n            loanTerm: '',\r\n            countryPostcode: 'UK',\r\n            formErrors: {\r\n                firstName: '',\r\n                surnameError: '',\r\n                dateOfBirthError: '',\r\n                emailError: '',\r\n                postcodeError: '',\r\n                companyNameError: '',\r\n                annualTurnoverError: '',\r\n                loanAmoutError: '',\r\n                loanTermError: '',\r\n            }\r\n          };\r\n    } \r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const { value, name } = event.target;\r\n        let formErrors = { ...this.state.formErrors };\r\n\r\n        switch (name) {\r\n            case 'firstName':\r\n            this.setState({ \r\n\r\n            })\r\n              formErrors.firstName =\r\n                value.length < 3 && (typeof value) !== 'string' ? 'minimum 3 characaters required' : '';\r\n              break;\r\n            case 'surname':\r\n              formErrors.surnameError =\r\n                value.length < 3 && (typeof value) !== 'string' ? 'minimum 3 characaters required' : '';\r\n              break;\r\n            case 'email':\r\n              formErrors.emailError = checkEmailValidity.test(value) ? '' : 'invalid email address';\r\n              break;\r\n            case 'postcode':\r\n              formErrors.postcodeError = value.length < 6 && Postcode.validate(value, this.state.countryPostcode) ? 'minimum 6 characaters required or invalid postcode' : '';\r\n              break;\r\n            case 'dateOfBirth':\r\n                formErrors.dateOfBirthError = this.checkDateOfBirthIsValid(value) ? 'Field is empty or date format is wrong' : '';\r\n              break;\r\n            case 'companyName':\r\n                formErrors.companyNameError = value.length < 3 && (typeof value) !== 'string' ? 'minimum 3 characaters required' : '';\r\n              break;\r\n            case 'loanAmout':\r\n                formErrors.loanAmoutError = value.length < 5 && (typeof value) !== 'number' ? 'minimum loan amount is 10 000' : '';\r\n              break;\r\n            case 'annualTurnover':\r\n                formErrors.password = value.length < 5 && (typeof value) !== 'number' ? 'minimum turnover amount is 15 000' : '';\r\n              break;\r\n            case 'loanTerm':\r\n                formErrors.loanTermError = value !== '' ? 'minimum 6 characaters required' : '';\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n\r\n        this.setState({ formErrors, [name]: value }, () => console.log(formErrors));\r\n    }\r\n\r\n    // find values for the minimum and maximum loan month terms, if there are none in the data set default values\r\n    generateMonthsOptions = () => {\r\n        let min;\r\n        let max;\r\n        Data.loanForm.forEach(sections => {\r\n            sections.fields.forEach(field => {\r\n                ('minMonths' in field) ? min = field.minMonths : min = 12;\r\n                ('maxMonths' in field) ? max = field.maxMonths + 1 : max = 61;\r\n            });\r\n        });\r\n\r\n        return  Array.from(Array(max-min).keys()).map(i => min + i);\r\n     } \r\n\r\n     checkDateOfBirthIsValid = (date) => {\r\n        const today = new Date();\r\n        date = Date.parse(date);\r\n\r\n        if (date === \"\") {\r\n            return false;\r\n        }\r\n        else if (checkDateOfBirthValidity.test(date)) {\r\n            return true;\r\n        }\r\n\r\n        if (today <= date) {\r\n            console.log(\"Current or future date is not allowed.\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n      const {firstName, surname, dateOfBirth, email, postcode, companyName, annualTurnover, loanAmout, loanTerm, formErrors} = this.state;\r\n\r\n      return (\r\n        <div className='loan-form'>\r\n            <FormHead title={'Get your Instant quote'} subtitle={`We only need a few details and it won't affect your credit score`}/>\r\n{formErrors.firstName}\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div className='loan-form-main-content'>\r\n                    <InputField fieldLabel={'First name'}\r\n                                fieldValue={firstName}\r\n                                fieldName={'firstName'}\r\n                                fieldError={formErrors.firstName}\r\n                                onChange={this.handleInputChange} />\r\n                    <InputField fieldLabel={'Surname'}\r\n                                fieldValue={surname}\r\n                                fieldName={'Surname'}\r\n                                fieldError={formErrors.surnameError}\r\n                                onChange={this.handleInputChange} />\r\n                    <InputField fieldLabel={'Email'}\r\n                                fieldValue={email}\r\n                                fieldName={'email'}\r\n                                fieldError={formErrors.firstNameError}\r\n                                fieldDetails={'You must be director of limited company registered at Company House'}\r\n                                fieldError={formErrors.emailError}\r\n                                onChange={this.handleInputChange} />\r\n                    <InputField fieldLabel={'Date of birth'}\r\n                                fieldValue={dateOfBirth}\r\n                                fieldName={'dateOfBirth'}\r\n                                fieldDetails={'You must be 18 years or older to apply for ezbob loan'}\r\n                                fieldError={formErrors.dateOfBirthError}\r\n                                onChange={this.handleInputChange} />\r\n                    <InputField fieldLabel={'Residential postcode'}\r\n                                fieldValue={postcode}\r\n                                fieldName={'postcode'}\r\n                                fieldDetails={'You must be UK resident'}\r\n                                fieldError={formErrors.postcodeError}\r\n                                onChange={this.handleInputChange} />\r\n                    <InputField fieldLabel={'Company name'}\r\n                                fieldValue={companyName}\r\n                                fieldName={'companyName'}\r\n                                fieldError={formErrors.companyNameError}\r\n                                onChange={this.handleInputChange} />\r\n                    <InputField fieldLabel={'Annual turnover'}\r\n                                fieldValue={annualTurnover}\r\n                                fieldName={'annualTurnover'}\r\n                                fieldDetails={'Your company must have a current annual turnover of 15k or moret'}\r\n                                fieldError={formErrors.annualTurnoverError}\r\n                                onChange={this.handleInputChange} />\r\n                    <InputField fieldLabel={'Loan ammount'}\r\n                                fieldValue={loanAmout}\r\n                                fieldName={'loanAmout'}\r\n                                fieldDetails={'£10,000 - £150,000'}\r\n                                fieldError={formErrors.loanAmoutError}\r\n                                onChange={this.handleInputChange} />\r\n                    <DropdownField fieldLabel={'Loan term'}\r\n                                   fieldValue={loanTerm}\r\n                                   fieldName={'loanTerm'}\r\n                                   arrayOptions={this.generateMonthsOptions()}\r\n                                   fieldError={formErrors.loanTermError}\r\n                                   onChange={this.handleInputChange} />\r\n                </div>\r\n\r\n                <FormConsentDetails consentText={Data.loanForm}/>\r\n\r\n                <div className='loan-form-submit-container'>\r\n                    <button className='loan-form-submit-button' type='submit' onClick={this.handleSubmit}>Consent & Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default LoanForm;"]},"metadata":{},"sourceType":"module"}