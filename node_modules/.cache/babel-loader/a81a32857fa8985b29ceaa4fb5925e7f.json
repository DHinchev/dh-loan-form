{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\ezbob-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\ezbob-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\ezbob-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\ezbob-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\ezbob-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\ezbob-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\ezbob-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\ezbob-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\ezbob-loan-form\\\\src\\\\components\\\\loan-form.js\";\nimport React, { Component } from 'react';\nimport Postcode from 'postcode-validator';\nimport { withRouter } from 'react-router-dom';\nimport InputField from './input-field';\nimport DropdownField from './dropdown-field';\nimport FormConsentDetails from './form-consent-details';\nimport FormHead from './form-head';\nimport '../styles/form-component/loan-form.css';\nimport Data from '../assets/data/data.json';\nvar checkEmailValidity = RegExp( // eslint-disable-next-line \n/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\nvar checkDateOfBirthValidity = RegExp( // eslint-disable-next-line \n/^(0[1-9]|[12][0-9]|3[01])[\\- \\/.](?:(0[1-9]|1[012])[\\- \\/.](19|20)[0-9]{2})$/);\nvar checkNameValidiry = RegExp( // eslint-disable-next-line \n/^[a-z ,.'-]+$/i);\nvar checkMoneyValidity = RegExp( // eslint-disable-next-line \n/^[0-9]+(\\.[0-9]{1,2})?$/);\n\nvar formValid = function formValid(_ref) {\n  var formErrors = _ref.formErrors,\n      rest = _objectWithoutProperties(_ref, [\"formErrors\"]);\n\n  var valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(function (val) {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(function (val) {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nvar LoanForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoanForm, _Component);\n\n  function LoanForm() {\n    var _this;\n\n    _classCallCheck(this, LoanForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoanForm).call(this));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      if (formValid(_this.state) && _this.state.loanAmout >= 10000) {\n        _this.props.history.push('/approval');\n      } else {\n        _this.props.history.push('/denied');\n      }\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n\n      var formErrors = _objectSpread({}, _this.state.formErrors);\n\n      switch (name) {\n        case 'firstName':\n          formErrors.firstNameError = value.length < 3 || typeof value !== 'string' || checkNameValidiry.test(value) === false ? 'Invalid name' : '';\n\n          if (value.length === 0) {\n            formErrors.firstNameError = '';\n          }\n\n          break;\n\n        case 'surname':\n          formErrors.surnameError = value.length < 3 || typeof value !== 'string' || checkNameValidiry.test(value) === false ? 'Invalid name' : '';\n\n          if (value.length === 0) {\n            formErrors.surnameError = '';\n          }\n\n          break;\n\n        case 'email':\n          formErrors.emailError = checkEmailValidity.test(value) ? '' : 'Invalid email address';\n\n          if (value.length === 0) {\n            formErrors.emailError = '';\n          }\n\n          break;\n\n        case 'postcode':\n          formErrors.postcodeError = value.length < 6 || Postcode.validate(value, _this.state.countryPostcode) === false ? 'Minimum 6 characaters required or invalid postcode' : '';\n\n          if (value.length === 0) {\n            formErrors.postcodeError = '';\n          }\n\n          break;\n\n        case 'dateOfBirth':\n          formErrors.dateOfBirthError = _this.checkDateOfBirthIsValid(value) ? 'Field is empty or date format is wrong' : '';\n\n          if (value.length === 0) {\n            formErrors.dateOfBirthError = '';\n          }\n\n          break;\n\n        case 'companyName':\n          formErrors.companyNameError = value.length < 3 ? 'Minimum 3 characaters required' : '';\n\n          if (value.length === 0) {\n            formErrors.companyNameError = '';\n          }\n\n          break;\n\n        case 'loanAmout':\n          formErrors.loanAmountError = checkMoneyValidity.test(value) === false ? 'Value need to be in numbers' : '';\n\n          if (value.length === 0) {\n            formErrors.loanAmountError = '';\n          }\n\n          break;\n\n        case 'annualTurnover':\n          formErrors.annualTurnoverError = checkMoneyValidity.test(value) === false ? 'Minimum turnover amount is 15 000' : '';\n\n          if (value.length === 0) {\n            formErrors.annualTurnoverError = '';\n          }\n\n          break;\n\n        case 'loanTerm':\n          formErrors.loanTermError = value === '' ? 'Please select repayment period' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      _this.setState(_defineProperty({\n        formErrors: formErrors\n      }, name, value), function () {\n        return console.log(formErrors);\n      });\n    };\n\n    _this.generateMonthsOptions = function () {\n      var min;\n      var max;\n      Data.loanForm.forEach(function (sections) {\n        sections.fields.forEach(function (field) {\n          'minMonths' in field ? min = field.minMonths : min = 12;\n          'maxMonths' in field ? max = field.maxMonths + 1 : max = 61;\n        });\n      });\n      return Array.from(Array(max - min).keys()).map(function (i) {\n        return min + i;\n      });\n    };\n\n    _this.checkDateOfBirthIsValid = function (date) {\n      var today = new Date();\n      date = Date.parse(date);\n\n      if (date === \"\") {\n        return false;\n      } else if (checkDateOfBirthValidity.test(date)) {\n        return true;\n      }\n\n      if (today <= date) {\n        console.log(\"Current or future date is not allowed.\");\n        return false;\n      }\n    };\n\n    _this.state = {\n      firstName: '',\n      surname: '',\n      dateOfBirth: '',\n      email: '',\n      postcode: '',\n      companyName: '',\n      annualTurnover: '',\n      loanAmout: '',\n      loanTerm: '',\n      countryPostcode: 'UK',\n      urlPath: '',\n      formErrors: {\n        firstNameError: '',\n        surnameError: '',\n        dateOfBirthError: '',\n        emailError: '',\n        postcodeError: '',\n        companyNameError: '',\n        annualTurnoverError: '',\n        loanAmountError: '',\n        loanTermError: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(LoanForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          firstName = _this$state.firstName,\n          surname = _this$state.surname,\n          dateOfBirth = _this$state.dateOfBirth,\n          email = _this$state.email,\n          postcode = _this$state.postcode,\n          companyName = _this$state.companyName,\n          annualTurnover = _this$state.annualTurnover,\n          loanAmout = _this$state.loanAmout,\n          loanTerm = _this$state.loanTerm,\n          urlPath = _this$state.urlPath,\n          formErrors = _this$state.formErrors;\n      return React.createElement(\"div\", {\n        className: \"loan-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(FormHead, {\n        title: 'Get your Instant quote',\n        subtitle: \"We only need a few details and it won't affect your credit score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"loan-form-main-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(InputField, {\n        fieldLabel: 'First name',\n        fieldValue: firstName,\n        fieldName: 'firstName',\n        fieldError: formErrors.firstNameError,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: 'Surname',\n        fieldValue: surname,\n        fieldName: 'surname',\n        fieldError: formErrors.surnameError,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: 'Email',\n        fieldValue: email,\n        fieldName: 'email',\n        fieldError: formErrors.emailError,\n        fieldDetails: 'You must be director of limited company registered at Company House',\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: 'Date of birth',\n        fieldValue: dateOfBirth,\n        fieldName: 'dateOfBirth',\n        fieldDetails: 'You must be 18 years or older to apply for ezbob loan',\n        fieldError: formErrors.dateOfBirthError,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: 'Residential postcode',\n        fieldValue: postcode,\n        fieldName: 'postcode',\n        fieldDetails: 'You must be UK resident',\n        fieldError: formErrors.postcodeError,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: 'Company name',\n        fieldValue: companyName,\n        fieldName: 'companyName',\n        fieldError: formErrors.companyNameError,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: 'Annual turnover',\n        fieldValue: annualTurnover,\n        fieldName: 'annualTurnover',\n        fieldDetails: 'Your company must have a current annual turnover of 15k or moret',\n        fieldError: formErrors.annualTurnoverError,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: 'Loan ammount',\n        fieldValue: loanAmout,\n        fieldName: 'loanAmout',\n        fieldDetails: '£10,000 - £150,000',\n        fieldError: formErrors.loanAmountError,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }), React.createElement(DropdownField, {\n        fieldLabel: 'Loan term',\n        fieldValue: loanTerm,\n        fieldName: 'loanTerm',\n        arrayOptions: this.generateMonthsOptions(),\n        fieldError: formErrors.loanTermError,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      })), React.createElement(FormConsentDetails, {\n        consentText: Data.loanForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"loan-form-submit-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"loan-form-submit-button\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Consent & Submit\"))));\n    }\n  }]);\n\n  return LoanForm;\n}(Component);\n\nexport default withRouter(LoanForm);","map":{"version":3,"sources":["C:\\Users\\natha\\Documents\\GitHub\\ezbob-loan-form\\src\\components\\loan-form.js"],"names":["React","Component","Postcode","withRouter","InputField","DropdownField","FormConsentDetails","FormHead","Data","checkEmailValidity","RegExp","checkDateOfBirthValidity","checkNameValidiry","checkMoneyValidity","formValid","formErrors","rest","valid","Object","values","forEach","val","length","LoanForm","handleSubmit","e","preventDefault","stopPropagation","state","loanAmout","props","history","push","handleInputChange","event","target","value","name","firstNameError","test","surnameError","emailError","postcodeError","validate","countryPostcode","dateOfBirthError","checkDateOfBirthIsValid","companyNameError","loanAmountError","annualTurnoverError","loanTermError","setState","console","log","generateMonthsOptions","min","max","loanForm","sections","fields","field","minMonths","maxMonths","Array","from","keys","map","i","date","today","Date","parse","firstName","surname","dateOfBirth","email","postcode","companyName","annualTurnover","loanTerm","urlPath"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Postcode from 'postcode-validator';\r\nimport {withRouter} from 'react-router-dom';\r\nimport InputField from './input-field';\r\nimport DropdownField from './dropdown-field';\r\nimport FormConsentDetails from './form-consent-details';\r\nimport FormHead from './form-head'; \r\nimport '../styles/form-component/loan-form.css';\r\nimport Data from '../assets/data/data.json';\r\n\r\nconst checkEmailValidity = RegExp(\r\n    // eslint-disable-next-line \r\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n);\r\n\r\nconst checkDateOfBirthValidity = RegExp(\r\n    // eslint-disable-next-line \r\n    /^(0[1-9]|[12][0-9]|3[01])[\\- \\/.](?:(0[1-9]|1[012])[\\- \\/.](19|20)[0-9]{2})$/\r\n);\r\n\r\nconst checkNameValidiry = RegExp(\r\n    // eslint-disable-next-line \r\n    /^[a-z ,.'-]+$/i\r\n);\r\n\r\nconst checkMoneyValidity = RegExp(\r\n    // eslint-disable-next-line \r\n    /^[0-9]+(\\.[0-9]{1,2})?$/\r\n)\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n    let valid = true;\r\n  \r\n    // validate form errors being empty\r\n    Object.values(formErrors).forEach(val => {\r\n      val.length > 0 && (valid = false);\r\n    });\r\n  \r\n    // validate the form was filled out\r\n    Object.values(rest).forEach(val => {\r\n      val === null && (valid = false);\r\n    });\r\n  \r\n    return valid;\r\n  };\r\n\r\n\r\nclass LoanForm extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            firstName: '',\r\n            surname: '',\r\n            dateOfBirth: '',\r\n            email: '',\r\n            postcode: '',\r\n            companyName: '',\r\n            annualTurnover: '',\r\n            loanAmout: '',\r\n            loanTerm: '',\r\n            countryPostcode: 'UK',\r\n            urlPath: '',\r\n            formErrors: {\r\n                firstNameError: '',\r\n                surnameError: '',\r\n                dateOfBirthError: '',\r\n                emailError: '',\r\n                postcodeError: '',\r\n                companyNameError: '',\r\n                annualTurnoverError: '',\r\n                loanAmountError: '',\r\n                loanTermError: '',\r\n            }\r\n          };\r\n    } \r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (formValid(this.state) && this.state.loanAmout >= 10000) {\r\n            this.props.history.push('/approval');\r\n        } else {\r\n            this.props.history.push('/denied');\r\n        }\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const { value, name } = event.target;\r\n        let formErrors = { ...this.state.formErrors };\r\n\r\n        switch (name) {\r\n            case 'firstName':\r\n              formErrors.firstNameError =\r\n                value.length < 3 || (typeof value) !== 'string' || checkNameValidiry.test(value) === false ? 'Invalid name' : '';\r\n                if(value.length === 0) {formErrors.firstNameError = '';}\r\n              break;\r\n            case 'surname':\r\n              formErrors.surnameError =\r\n                value.length < 3 || (typeof value) !== 'string' || checkNameValidiry.test(value) === false ? 'Invalid name' : '';\r\n                if(value.length === 0) {formErrors.surnameError = '';}\r\n              break;\r\n            case 'email':\r\n              formErrors.emailError = checkEmailValidity.test(value) ? '' : 'Invalid email address';\r\n              if(value.length === 0) {formErrors.emailError = '';}\r\n              break;\r\n            case 'postcode':\r\n              formErrors.postcodeError = value.length < 6 || Postcode.validate(value, this.state.countryPostcode) === false ? 'Minimum 6 characaters required or invalid postcode' : '';\r\n              if(value.length === 0) {formErrors.postcodeError = '';}\r\n              break;\r\n            case 'dateOfBirth':\r\n                formErrors.dateOfBirthError = this.checkDateOfBirthIsValid(value) ? 'Field is empty or date format is wrong' : '';\r\n                if(value.length === 0) {formErrors.dateOfBirthError = '';}\r\n              break;\r\n            case 'companyName':\r\n                formErrors.companyNameError = value.length < 3 ? 'Minimum 3 characaters required' : '';\r\n                if(value.length === 0) {formErrors.companyNameError = '';}\r\n              break;\r\n            case 'loanAmout':\r\n                formErrors.loanAmountError = checkMoneyValidity.test(value) === false ? 'Value need to be in numbers' : '';\r\n                if(value.length === 0) {formErrors.loanAmountError = '';}\r\n              break;\r\n            case 'annualTurnover':\r\n                formErrors.annualTurnoverError = checkMoneyValidity.test(value) === false ? 'Minimum turnover amount is 15 000' : '';\r\n                if(value.length === 0) {formErrors.annualTurnoverError = '';}\r\n              break;\r\n            case 'loanTerm':\r\n                formErrors.loanTermError = value === '' ? 'Please select repayment period' : '';\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n\r\n        this.setState({ formErrors, [name]: value }, () => console.log(formErrors));\r\n    }\r\n\r\n    // find values for the minimum and maximum loan month terms, if there are none in the data set default values\r\n    generateMonthsOptions = () => {\r\n        let min;\r\n        let max;\r\n        Data.loanForm.forEach(sections => {\r\n            sections.fields.forEach(field => {\r\n                ('minMonths' in field) ? min = field.minMonths : min = 12;\r\n                ('maxMonths' in field) ? max = field.maxMonths + 1 : max = 61;\r\n            });\r\n        });\r\n\r\n        return  Array.from(Array(max-min).keys()).map(i => min + i);\r\n     } \r\n\r\n     checkDateOfBirthIsValid = (date) => {\r\n        const today = new Date();\r\n        date = Date.parse(date);\r\n\r\n        if (date === \"\") {\r\n            return false;\r\n        }\r\n        else if (checkDateOfBirthValidity.test(date)) {\r\n            return true;\r\n        }\r\n\r\n        if (today <= date) {\r\n            console.log(\"Current or future date is not allowed.\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n      const {firstName, surname, dateOfBirth, email, postcode, companyName, annualTurnover, loanAmout, loanTerm, urlPath, formErrors} = this.state;\r\n\r\n      return (\r\n        <div className='loan-form'>\r\n            <FormHead title={'Get your Instant quote'} subtitle={`We only need a few details and it won't affect your credit score`}/>\r\n\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div className='loan-form-main-content'>\r\n                    <InputField fieldLabel={'First name'}\r\n                                fieldValue={firstName}\r\n                                fieldName={'firstName'}\r\n                                fieldError={formErrors.firstNameError}\r\n                                onChange={this.handleInputChange} />\r\n                    <InputField fieldLabel={'Surname'}\r\n                                fieldValue={surname}\r\n                                fieldName={'surname'}\r\n                                fieldError={formErrors.surnameError}\r\n                                onChange={this.handleInputChange} />\r\n                    <InputField fieldLabel={'Email'}\r\n                                fieldValue={email}\r\n                                fieldName={'email'}\r\n                                fieldError={formErrors.emailError}\r\n                                fieldDetails={'You must be director of limited company registered at Company House'}\r\n                                onChange={this.handleInputChange} />\r\n                    <InputField fieldLabel={'Date of birth'}\r\n                                fieldValue={dateOfBirth}\r\n                                fieldName={'dateOfBirth'}\r\n                                fieldDetails={'You must be 18 years or older to apply for ezbob loan'}\r\n                                fieldError={formErrors.dateOfBirthError}\r\n                                onChange={this.handleInputChange} />\r\n                    <InputField fieldLabel={'Residential postcode'}\r\n                                fieldValue={postcode}\r\n                                fieldName={'postcode'}\r\n                                fieldDetails={'You must be UK resident'}\r\n                                fieldError={formErrors.postcodeError}\r\n                                onChange={this.handleInputChange} />\r\n                    <InputField fieldLabel={'Company name'}\r\n                                fieldValue={companyName}\r\n                                fieldName={'companyName'}\r\n                                fieldError={formErrors.companyNameError}\r\n                                onChange={this.handleInputChange} />\r\n                    <InputField fieldLabel={'Annual turnover'}\r\n                                fieldValue={annualTurnover}\r\n                                fieldName={'annualTurnover'}\r\n                                fieldDetails={'Your company must have a current annual turnover of 15k or moret'}\r\n                                fieldError={formErrors.annualTurnoverError}\r\n                                onChange={this.handleInputChange} />\r\n                    <InputField fieldLabel={'Loan ammount'}\r\n                                fieldValue={loanAmout}\r\n                                fieldName={'loanAmout'}\r\n                                fieldDetails={'£10,000 - £150,000'}\r\n                                fieldError={formErrors.loanAmountError}\r\n                                onChange={this.handleInputChange} />\r\n                    <DropdownField fieldLabel={'Loan term'}\r\n                                   fieldValue={loanTerm}\r\n                                   fieldName={'loanTerm'}\r\n                                   arrayOptions={this.generateMonthsOptions()}\r\n                                   fieldError={formErrors.loanTermError}\r\n                                   onChange={this.handleInputChange} />\r\n                </div>\r\n\r\n                <FormConsentDetails consentText={Data.loanForm}/>\r\n\r\n                <div className='loan-form-submit-container'>\r\n                        <button className='loan-form-submit-button' type='submit'>\r\n                           Consent & Submit\r\n                        </button>\r\n                    \r\n                </div>\r\n            </form>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withRouter(LoanForm);"]},"metadata":{},"sourceType":"module"}