{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\dh-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\dh-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\dh-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\dh-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\dh-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\dh-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\dh-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\dh-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\dh-loan-form\\\\src\\\\components\\\\loan-form.js\";\nimport React, { Component } from 'react';\nimport Postcode from 'postcode-validator';\nimport ValidDate from 'is-valid-date';\nimport { withRouter } from 'react-router-dom';\nimport InputField from './input-field';\nimport DropdownField from './dropdown-field';\nimport FormConsentDetails from './form-consent-details';\nimport FormHead from './form-head';\nimport Data from '../assets/data/data.json';\nimport '../styles/form-component/loan-form.scss';\n\nvar isString = function isString(value) {\n  return typeof value === 'string';\n};\n\nvar checkEmailValidity = RegExp( // eslint-disable-next-line\n/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\nvar checkNameValidity = RegExp( // eslint-disable-next-line\n/^[a-z ,.'-]+$/i);\nvar checkMoneyValidity = RegExp( // eslint-disable-next-line\n/^[0-9]+(\\.[0-9]{1,2})?$/);\n\nvar formValid = function formValid(_ref) {\n  var formErrors = _ref.formErrors,\n      rest = _objectWithoutProperties(_ref, [\"formErrors\"]);\n\n  var valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(function (val) {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(function (val) {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nvar LoanForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoanForm, _Component);\n\n  function LoanForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoanForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoanForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      firstName: '',\n      surname: '',\n      dateOfBirth: '',\n      email: '',\n      postcode: '',\n      companyName: '',\n      annualTurnover: '',\n      loanAmount: '',\n      loanTerm: '',\n      countryPostcode: 'UK',\n      formErrors: {\n        firstNameError: '',\n        surnameError: '',\n        dateOfBirthError: '',\n        emailError: '',\n        postcodeError: '',\n        companyNameError: '',\n        annualTurnoverError: '',\n        loanAmountError: '',\n        loanTermError: ''\n      }\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      if (formValid(_this.state) && _this.state.loanAmount >= 10000) {\n        localStorage.setItem('loanAmount', _this.state.loanAmount);\n        localStorage.setItem('loanTerm', _this.state.loanTerm);\n\n        _this.setState({\n          firstName: '',\n          surname: '',\n          dateOfBirth: '',\n          email: '',\n          postcode: '',\n          companyName: '',\n          annualTurnover: '',\n          loanAmount: '',\n          loanTerm: ''\n        });\n\n        _this.props.history.push('/approval');\n      } else {\n        _this.props.history.push('/denied');\n      }\n    };\n\n    _this.handleInputChange = function (_ref2) {\n      var target = _ref2.target;\n      var value = target.value,\n          name = target.name;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.validateInputField = function (value, name) {\n      var errorStateName = \"\".concat(name, \"Error\");\n\n      var formErrors = _objectSpread({}, _this.state.formErrors);\n\n      if (!value.length) {\n        formErrors[errorStateName] = '';\n      } else {\n        if (name === 'postcode') {\n          formErrors[errorStateName] = LoanForm.fieldErrorMessageMap[name](value, _this.state.countryPostcode);\n        } else {\n          formErrors[errorStateName] = LoanForm.fieldErrorMessageMap[name](value);\n        }\n      }\n\n      _this.setState({\n        formErrors: formErrors\n      });\n    };\n\n    _this.generateMonthsOptions = function () {\n      var min;\n      var max;\n      Data.loanForm.forEach(function (sections) {\n        sections.fields.forEach(function (field) {\n          'minMonths' in field ? min = field.minMonths : min = 12;\n          'maxMonths' in field ? max = field.maxMonths + 1 : max = 61;\n        });\n      });\n      return Array.from(Array(max - min).keys()).map(function (i) {\n        return min + i;\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LoanForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          firstName = _this$state.firstName,\n          surname = _this$state.surname,\n          dateOfBirth = _this$state.dateOfBirth,\n          email = _this$state.email,\n          postcode = _this$state.postcode,\n          companyName = _this$state.companyName,\n          annualTurnover = _this$state.annualTurnover,\n          loanAmount = _this$state.loanAmount,\n          loanTerm = _this$state.loanTerm,\n          formErrors = _this$state.formErrors;\n      var firstNameError = formErrors.firstNameError,\n          surnameError = formErrors.surnameError,\n          dateOfBirthError = formErrors.dateOfBirthError,\n          emailError = formErrors.emailError,\n          postcodeError = formErrors.postcodeError,\n          companyNameError = formErrors.companyNameError,\n          annualTurnoverError = formErrors.annualTurnoverError,\n          loanAmountError = formErrors.loanAmountError,\n          loanTermError = formErrors.loanTermError;\n      return React.createElement(\"div\", {\n        className: \"loan-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(FormHead, {\n        title: \"Get your Instant quote\",\n        subtitle: \"We only need a few details and it won't affect your credit score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"loan-form-main-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(InputField, {\n        fieldLabel: \"First name\",\n        fieldName: \"firstName\",\n        fieldValue: firstName,\n        fieldError: firstNameError,\n        onChange: this.handleInputChange,\n        onBlur: this.validateInputField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: \"Surname\",\n        fieldName: \"surname\",\n        fieldValue: surname,\n        fieldError: surnameError,\n        onChange: this.handleInputChange,\n        onBlur: this.validateInputField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: \"Email\",\n        fieldName: \"email\",\n        fieldDetails: \"You must be director of limited company registered at Company House\",\n        fieldValue: email,\n        fieldError: emailError,\n        onChange: this.handleInputChange,\n        onBlur: this.validateInputField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: \"Date of birth\",\n        fieldName: \"dateOfBirth\",\n        fieldDetails: \"You must be 18 years or older to apply for ezbob loan\",\n        fieldValue: dateOfBirth,\n        fieldError: dateOfBirthError,\n        onChange: this.handleInputChange,\n        onBlur: this.validateInputField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: \"Residential postcode\",\n        fieldName: \"postcode\",\n        fieldDetails: \"You must be UK resident\",\n        fieldValue: postcode,\n        fieldError: postcodeError,\n        onChange: this.handleInputChange,\n        onBlur: this.validateInputField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: \"Company name\",\n        fieldName: \"companyName\",\n        fieldValue: companyName,\n        fieldError: companyNameError,\n        onChange: this.handleInputChange,\n        onBlur: this.validateInputField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: \"Annual turnover\",\n        fieldName: \"annualTurnover\",\n        fieldDetails: \"Your company must have a current annual turnover of 15k or more\",\n        fieldValue: annualTurnover,\n        fieldError: annualTurnoverError,\n        onChange: this.handleInputChange,\n        onBlur: this.validateInputField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: \"Loan amount\",\n        fieldName: \"loanAmount\",\n        fieldDetails: \"\\xA310,000 - \\xA3150,000\",\n        fieldValue: loanAmount,\n        fieldError: loanAmountError,\n        onChange: this.handleInputChange,\n        onBlur: this.validateInputField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }), React.createElement(DropdownField, {\n        fieldLabel: \"Loan term\",\n        fieldName: \"loanTerm\",\n        fieldValue: loanTerm,\n        arrayOptions: this.generateMonthsOptions(),\n        fieldError: loanTermError,\n        onChange: this.handleInputChange,\n        onBlur: this.validateInputField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      })), React.createElement(FormConsentDetails, {\n        consentText: Data.loanForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"loan-form-submit-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"loan-form-submit-button\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"Consent & Submit\"))));\n    }\n  }]);\n\n  return LoanForm;\n}(Component);\n\nLoanForm.checkUserMaturity = function (date) {\n  var currentYear = new Date().getFullYear(); // eslint-disable-next-line\n\n  var getUserBirthYear = date.split(/[.,\\/ -]/);\n  var ageCalculation = parseInt(currentYear) - parseInt(getUserBirthYear[2]);\n\n  if (ageCalculation >= 18 && getUserBirthYear[2] > 1900) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nLoanForm.fieldErrorMessageMap = {\n  firstName: function firstName(value) {\n    var MIN_VALID_NAME_LENGTH = 2;\n    var isNameInvalid = !isString(value) || !checkNameValidity.test(value) || value.length < MIN_VALID_NAME_LENGTH;\n    return isNameInvalid ? 'Invalid name' : '';\n  },\n  surname: function surname(value) {\n    var MIN_VALID_SURNAME_LENGTH = 3;\n    var isSurnameInvalid = !isString(value) || !checkNameValidity.test(value) || value.length < MIN_VALID_SURNAME_LENGTH;\n    return isSurnameInvalid ? 'Invalid name' : '';\n  },\n  email: function email(value) {\n    return !checkEmailValidity.test(value) ? 'Invalid email address' : '';\n  },\n  postcode: function postcode(value, country) {\n    var isPostcodeInvalid = !(value.length >= 6 && value.length <= 8) && !Postcode.validate(value, country);\n    return isPostcodeInvalid ? 'Minimum 6 characters required or invalid postcode' : '';\n  },\n  dateOfBirth: function dateOfBirth(value) {\n    var isDOBInvalid = !LoanForm.checkUserMaturity(value) || !ValidDate(value);\n    return isDOBInvalid ? 'Date format is wrong or user is below age of 18' : '';\n  },\n  companyName: function companyName(value) {\n    return value.length < 3 ? 'Minimum 3 characters required' : '';\n  },\n  loanAmount: function loanAmount(value) {\n    return !checkMoneyValidity.test(value) ? 'Value need to be in numbers' : '';\n  },\n  annualTurnover: function annualTurnover(value) {\n    return !checkMoneyValidity.test(value) ? 'Minimum turnover amount is 15 000' : '';\n  },\n  loanTerm: function loanTerm(value) {\n    return !value.length ? 'Please select repayment period' : '';\n  }\n};\nexport default withRouter(LoanForm);","map":{"version":3,"sources":["C:\\Users\\natha\\Documents\\GitHub\\dh-loan-form\\src\\components\\loan-form.js"],"names":["React","Component","Postcode","ValidDate","withRouter","InputField","DropdownField","FormConsentDetails","FormHead","Data","isString","value","checkEmailValidity","RegExp","checkNameValidity","checkMoneyValidity","formValid","formErrors","rest","valid","Object","values","forEach","val","length","LoanForm","state","firstName","surname","dateOfBirth","email","postcode","companyName","annualTurnover","loanAmount","loanTerm","countryPostcode","firstNameError","surnameError","dateOfBirthError","emailError","postcodeError","companyNameError","annualTurnoverError","loanAmountError","loanTermError","handleSubmit","e","preventDefault","stopPropagation","localStorage","setItem","setState","props","history","push","handleInputChange","target","name","validateInputField","errorStateName","fieldErrorMessageMap","generateMonthsOptions","min","max","loanForm","sections","fields","field","minMonths","maxMonths","Array","from","keys","map","i","checkUserMaturity","date","currentYear","Date","getFullYear","getUserBirthYear","split","ageCalculation","parseInt","MIN_VALID_NAME_LENGTH","isNameInvalid","test","MIN_VALID_SURNAME_LENGTH","isSurnameInvalid","country","isPostcodeInvalid","validate","isDOBInvalid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Postcode from 'postcode-validator';\r\nimport ValidDate from 'is-valid-date';\r\nimport {withRouter} from 'react-router-dom';\r\nimport InputField from './input-field';\r\nimport DropdownField from './dropdown-field';\r\nimport FormConsentDetails from './form-consent-details';\r\nimport FormHead from './form-head';\r\nimport Data from '../assets/data/data.json';\r\nimport '../styles/form-component/loan-form.scss';\r\n \r\nconst isString = (value) => (typeof value) === 'string';\r\n \r\nconst checkEmailValidity = RegExp(\r\n    // eslint-disable-next-line\r\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n);\r\n \r\nconst checkNameValidity = RegExp(\r\n    // eslint-disable-next-line\r\n    /^[a-z ,.'-]+$/i\r\n);\r\n \r\nconst checkMoneyValidity = RegExp(\r\n    // eslint-disable-next-line\r\n    /^[0-9]+(\\.[0-9]{1,2})?$/\r\n);\r\n \r\nconst formValid = ({ formErrors, ...rest }) => {\r\n    let valid = true;\r\n \r\n    // validate form errors being empty\r\n    Object.values(formErrors).forEach(val => {\r\n      val.length > 0 && (valid = false);\r\n    });\r\n \r\n    // validate the form was filled out\r\n    Object.values(rest).forEach(val => {\r\n      val === null && (valid = false);\r\n    });\r\n \r\n    return valid;\r\n};\r\n \r\nclass LoanForm extends Component {\r\n    state = {\r\n        firstName: '',\r\n        surname: '',\r\n        dateOfBirth: '',\r\n        email: '',\r\n        postcode: '',\r\n        companyName: '',\r\n        annualTurnover: '',\r\n        loanAmount: '',\r\n        loanTerm: '',\r\n        countryPostcode: 'UK',\r\n        formErrors: {\r\n            firstNameError: '',\r\n            surnameError: '',\r\n            dateOfBirthError: '',\r\n            emailError: '',\r\n            postcodeError: '',\r\n            companyNameError: '',\r\n            annualTurnoverError: '',\r\n            loanAmountError: '',\r\n            loanTermError: '',\r\n        }\r\n    };\r\n \r\n    static checkUserMaturity = (date) => {\r\n        const currentYear = new Date().getFullYear();\r\n        // eslint-disable-next-line\r\n        const getUserBirthYear = date.split(/[.,\\/ -]/);\r\n        const ageCalculation = parseInt(currentYear) - parseInt(getUserBirthYear[2]);\r\n        if (ageCalculation >= 18 && getUserBirthYear[2] > 1900) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n \r\n    static fieldErrorMessageMap = {\r\n        firstName: (value) => {\r\n            const MIN_VALID_NAME_LENGTH = 2;\r\n            const isNameInvalid = (\r\n                !isString(value) ||\r\n                !checkNameValidity.test(value) ||\r\n                value.length < MIN_VALID_NAME_LENGTH\r\n            );\r\n \r\n            return (isNameInvalid)\r\n                ? 'Invalid name'\r\n                : '';\r\n        },\r\n        surname: (value) => {\r\n            const MIN_VALID_SURNAME_LENGTH = 3;\r\n            const isSurnameInvalid = (\r\n                !isString(value) ||\r\n                !checkNameValidity.test(value) ||\r\n                value.length < MIN_VALID_SURNAME_LENGTH\r\n            );\r\n \r\n            return (isSurnameInvalid)\r\n                ? 'Invalid name'\r\n                : '';\r\n        },\r\n        email: (value) => {\r\n            return !checkEmailValidity.test(value)\r\n                ? 'Invalid email address'\r\n                : '';\r\n        },\r\n        postcode: (value, country) => {\r\n            const isPostcodeInvalid = (\r\n                !(value.length >= 6 && value.length <= 8) &&\r\n                !Postcode.validate(value, country)\r\n            );\r\n \r\n            return isPostcodeInvalid\r\n                ? 'Minimum 6 characters required or invalid postcode'\r\n                : '';\r\n        },\r\n        dateOfBirth: (value) => {\r\n            const isDOBInvalid = !LoanForm.checkUserMaturity(value) || !ValidDate(value);\r\n \r\n            return (isDOBInvalid)\r\n                ? 'Date format is wrong or user is below age of 18'\r\n                : '';\r\n        },\r\n        companyName: (value) => {\r\n            return (value.length < 3)\r\n                ? 'Minimum 3 characters required'\r\n                : '';\r\n        },\r\n        loanAmount: (value) => {\r\n            return !checkMoneyValidity.test(value)\r\n                ? 'Value need to be in numbers'\r\n                : '';\r\n        },\r\n        annualTurnover: (value) => {\r\n            return !checkMoneyValidity.test(value)\r\n                ? 'Minimum turnover amount is 15 000'\r\n                : '';\r\n        },\r\n        loanTerm: (value) => {\r\n            return (!value.length)\r\n                ? 'Please select repayment period'\r\n                : '';\r\n        }\r\n    };\r\n \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (formValid(this.state) && this.state.loanAmount >= 10000) {\r\n            localStorage.setItem('loanAmount',  this.state.loanAmount);\r\n            localStorage.setItem('loanTerm',  this.state.loanTerm);\r\n            this.setState({\r\n                firstName: '',\r\n                surname: '',\r\n                dateOfBirth: '',\r\n                email: '',\r\n                postcode: '',\r\n                companyName: '',\r\n                annualTurnover: '',\r\n                loanAmount: '',\r\n                loanTerm: '',\r\n            });\r\n            this.props.history.push('/approval');\r\n        } else {\r\n            this.props.history.push('/denied');\r\n        }\r\n    }\r\n \r\n    handleInputChange = ({ target }) => {\r\n        const { value, name } = target;\r\n \r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n \r\n    validateInputField = (value, name) => {\r\n        const errorStateName = `${name}Error`;\r\n        const formErrors = { ...this.state.formErrors };\r\n \r\n        if (!value.length) {\r\n            formErrors[errorStateName] = '';\r\n        } else {\r\n            if (name === 'postcode') {\r\n                formErrors[errorStateName] = LoanForm.fieldErrorMessageMap[name](value, this.state.countryPostcode);\r\n            } else {\r\n                formErrors[errorStateName] = LoanForm.fieldErrorMessageMap[name](value);\r\n            }\r\n        }\r\n \r\n        this.setState({ formErrors });\r\n    }\r\n \r\n    // find values for the minimum and maximum loan month terms, if there are none in the data set default values\r\n    generateMonthsOptions = () => {\r\n        let min;\r\n        let max;\r\n        Data.loanForm.forEach(sections => {\r\n            sections.fields.forEach(field => {\r\n                ('minMonths' in field) ? min = field.minMonths : min = 12;\r\n                ('maxMonths' in field) ? max = field.maxMonths + 1 : max = 61;\r\n            });\r\n        });\r\n \r\n        return  Array.from(Array(max-min).keys()).map(i => min + i);\r\n    }\r\n \r\n    render() {\r\n        const {\r\n            firstName,\r\n            surname,\r\n            dateOfBirth,\r\n            email,\r\n            postcode,\r\n            companyName,\r\n            annualTurnover,\r\n            loanAmount,\r\n            loanTerm,\r\n            formErrors\r\n        } = this.state;\r\n \r\n        const {\r\n            firstNameError,\r\n            surnameError,\r\n            dateOfBirthError,\r\n            emailError,\r\n            postcodeError,\r\n            companyNameError,\r\n            annualTurnoverError,\r\n            loanAmountError,\r\n            loanTermError,\r\n        } = formErrors;\r\n \r\n        return (\r\n            <div className=\"loan-form\">\r\n                <FormHead\r\n                    title=\"Get your Instant quote\"\r\n                    subtitle=\"We only need a few details and it won't affect your credit score\"\r\n                />\r\n \r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"loan-form-main-content\">\r\n                        <InputField\r\n                            fieldLabel=\"First name\"\r\n                            fieldName=\"firstName\"\r\n                            fieldValue={firstName}\r\n                            fieldError={firstNameError}\r\n                            onChange={this.handleInputChange}\r\n                            onBlur={this.validateInputField}\r\n                        />\r\n                        <InputField\r\n                            fieldLabel=\"Surname\"\r\n                            fieldName=\"surname\"\r\n                            fieldValue={surname}\r\n                            fieldError={surnameError}\r\n                            onChange={this.handleInputChange}\r\n                            onBlur={this.validateInputField}\r\n                        />\r\n                        <InputField\r\n                            fieldLabel=\"Email\"\r\n                            fieldName=\"email\"\r\n                            fieldDetails=\"You must be director of limited company registered at Company House\"\r\n                            fieldValue={email}\r\n                            fieldError={emailError}\r\n                            onChange={this.handleInputChange}\r\n                            onBlur={this.validateInputField}\r\n                        />\r\n                        <InputField\r\n                            fieldLabel=\"Date of birth\"\r\n                            fieldName=\"dateOfBirth\"\r\n                            fieldDetails=\"You must be 18 years or older to apply for ezbob loan\"\r\n                            fieldValue={dateOfBirth}\r\n                            fieldError={dateOfBirthError}\r\n                            onChange={this.handleInputChange}\r\n                            onBlur={this.validateInputField}\r\n                        />\r\n                        <InputField\r\n                            fieldLabel=\"Residential postcode\"\r\n                            fieldName=\"postcode\"\r\n                            fieldDetails=\"You must be UK resident\"\r\n                            fieldValue={postcode}\r\n                            fieldError={postcodeError}\r\n                            onChange={this.handleInputChange}\r\n                            onBlur={this.validateInputField}\r\n                        />\r\n                        <InputField\r\n                            fieldLabel=\"Company name\"\r\n                            fieldName=\"companyName\"\r\n                            fieldValue={companyName}\r\n                            fieldError={companyNameError}\r\n                            onChange={this.handleInputChange}\r\n                            onBlur={this.validateInputField}\r\n                        />\r\n                        <InputField\r\n                            fieldLabel=\"Annual turnover\"\r\n                            fieldName=\"annualTurnover\"\r\n                            fieldDetails=\"Your company must have a current annual turnover of 15k or more\"\r\n                            fieldValue={annualTurnover}\r\n                            fieldError={annualTurnoverError}\r\n                            onChange={this.handleInputChange}\r\n                            onBlur={this.validateInputField}\r\n                        />\r\n                        <InputField\r\n                            fieldLabel=\"Loan amount\"\r\n                            fieldName=\"loanAmount\"\r\n                            fieldDetails=\"£10,000 - £150,000\"\r\n                            fieldValue={loanAmount}\r\n                            fieldError={loanAmountError}\r\n                            onChange={this.handleInputChange}\r\n                            onBlur={this.validateInputField}\r\n                        />\r\n                        <DropdownField\r\n                            fieldLabel=\"Loan term\"\r\n                            fieldName=\"loanTerm\"\r\n                            fieldValue={loanTerm}\r\n                            arrayOptions={this.generateMonthsOptions()}\r\n                            fieldError={loanTermError}\r\n                            onChange={this.handleInputChange}\r\n                            onBlur={this.validateInputField}\r\n                        />\r\n                    </div>\r\n \r\n                    <FormConsentDetails consentText={Data.loanForm} />\r\n \r\n                    <div className='loan-form-submit-container'>\r\n                        <button className='loan-form-submit-button' type='submit'>\r\n                            Consent & Submit\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default withRouter(LoanForm);"]},"metadata":{},"sourceType":"module"}