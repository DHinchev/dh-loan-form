{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\dh-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\dh-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\dh-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\dh-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\dh-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\dh-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\dh-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\dh-loan-form\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\natha\\\\Documents\\\\GitHub\\\\dh-loan-form\\\\src\\\\components\\\\loan-form.js\";\nimport React, { Component } from 'react';\nimport Postcode from 'postcode-validator';\nimport ValidDate from 'is-valid-date';\nimport { withRouter } from 'react-router-dom';\nimport InputField from './input-field';\nimport DropdownField from './dropdown-field';\nimport FormConsentDetails from './form-consent-details';\nimport FormHead from './form-head';\nimport '../styles/form-component/loan-form.scss';\nimport Data from '../assets/data/data.json';\nvar checkEmailValidity = RegExp( // eslint-disable-next-line \n/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\nvar checkNameValidiry = RegExp( // eslint-disable-next-line \n/^[a-z ,.'-]+$/i);\nvar checkMoneyValidity = RegExp( // eslint-disable-next-line \n/^[0-9]+(\\.[0-9]{1,2})?$/);\n\nvar formValid = function formValid(_ref) {\n  var formErrors = _ref.formErrors,\n      rest = _objectWithoutProperties(_ref, [\"formErrors\"]);\n\n  var valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(function (val) {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(function (val) {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nvar LoanForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoanForm, _Component);\n\n  function LoanForm(props) {\n    var _this;\n\n    _classCallCheck(this, LoanForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoanForm).call(this, props));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      if (formValid(_this.state) && _this.state.loanAmount >= 10000) {\n        localStorage.setItem('loanAmount', _this.state.loanAmount);\n        localStorage.setItem('loanTerm', _this.state.loanTerm);\n\n        _this.setState({\n          firstName: '',\n          surname: '',\n          dateOfBirth: '',\n          email: '',\n          postcode: '',\n          companyName: '',\n          annualTurnover: '',\n          loanAmount: '',\n          loanTerm: ''\n        });\n\n        _this.props.history.push('/approval');\n      } else {\n        _this.props.history.push('/denied');\n      }\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n\n      var formErrors = _objectSpread({}, _this.state.formErrors);\n\n      switch (name) {\n        case 'firstName':\n          formErrors.firstNameError = value.length < 2 || typeof value !== 'string' || checkNameValidiry.test(value) === false ? 'Invalid name' : '';\n\n          if (value.length === 0) {\n            formErrors.firstNameError = '';\n          }\n\n          break;\n\n        case 'surname':\n          formErrors.surnameError = value.length < 3 || typeof value !== 'string' || checkNameValidiry.test(value) === false ? 'Invalid name' : '';\n\n          if (value.length === 0) {\n            formErrors.surnameError = '';\n          }\n\n          break;\n\n        case 'email':\n          formErrors.emailError = checkEmailValidity.test(value) ? '' : 'Invalid email address';\n\n          if (value.length === 0) {\n            formErrors.emailError = '';\n          }\n\n          break;\n\n        case 'postcode':\n          formErrors.postcodeError = !(value.length >= 6 && value.length <= 8) && Postcode.validate(value, _this.state.countryPostcode) === false ? 'Minimum 6 characaters required or invalid postcode' : '';\n\n          if (value.length === 0) {\n            formErrors.postcodeError = '';\n          }\n\n          break;\n\n        case 'dateOfBirth':\n          formErrors.dateOfBirthError = !_this.checkUserMaturity(value) || !ValidDate(value) ? 'Date format is wrong or user is below age of 18' : '';\n\n          if (value.length === 0) {\n            formErrors.dateOfBirthError = '';\n          }\n\n          break;\n\n        case 'companyName':\n          formErrors.companyNameError = value.length < 3 ? 'Minimum 3 characaters required' : '';\n\n          if (value.length === 0) {\n            formErrors.companyNameError = '';\n          }\n\n          break;\n\n        case 'loanAmount':\n          formErrors.loanAmountError = checkMoneyValidity.test(value) === false ? 'Value need to be in numbers' : '';\n\n          if (value.length === 0) {\n            formErrors.loanAmountError = '';\n          }\n\n          break;\n\n        case 'annualTurnover':\n          formErrors.annualTurnoverError = checkMoneyValidity.test(value) === false ? 'Minimum turnover amount is 15 000' : '';\n\n          if (value.length === 0) {\n            formErrors.annualTurnoverError = '';\n          }\n\n          break;\n\n        case 'loanTerm':\n          formErrors.loanTermError = value === '' ? 'Please select repayment period' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      _this.setState(_defineProperty({\n        formErrors: formErrors\n      }, name, value));\n    };\n\n    _this.generateMonthsOptions = function () {\n      var min;\n      var max;\n      Data.loanForm.forEach(function (sections) {\n        sections.fields.forEach(function (field) {\n          'minMonths' in field ? min = field.minMonths : min = 12;\n          'maxMonths' in field ? max = field.maxMonths + 1 : max = 61;\n        });\n      });\n      return Array.from(Array(max - min).keys()).map(function (i) {\n        return min + i;\n      });\n    };\n\n    _this.checkUserMaturity = function (date) {\n      var currentYear = new Date().getFullYear(); // eslint-disable-next-line \n\n      var getUserBirthYear = date.split(/[.,\\/ -]/);\n      var ageCalculation = parseInt(currentYear) - parseInt(getUserBirthYear[2]);\n\n      if (ageCalculation >= 18 && getUserBirthYear[2] > 1900) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    _this.state = {\n      firstName: '',\n      surname: '',\n      dateOfBirth: '',\n      email: '',\n      postcode: '',\n      companyName: '',\n      annualTurnover: '',\n      loanAmount: '',\n      loanTerm: '',\n      countryPostcode: 'UK',\n      formErrors: {\n        firstNameError: '',\n        surnameError: '',\n        dateOfBirthError: '',\n        emailError: '',\n        postcodeError: '',\n        companyNameError: '',\n        annualTurnoverError: '',\n        loanAmountError: '',\n        loanTermError: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(LoanForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          firstName = _this$state.firstName,\n          surname = _this$state.surname,\n          dateOfBirth = _this$state.dateOfBirth,\n          email = _this$state.email,\n          postcode = _this$state.postcode,\n          companyName = _this$state.companyName,\n          annualTurnover = _this$state.annualTurnover,\n          loanAmount = _this$state.loanAmount,\n          loanTerm = _this$state.loanTerm,\n          formErrors = _this$state.formErrors;\n      return React.createElement(\"div\", {\n        className: \"loan-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(FormHead, {\n        title: 'Get your Instant quote',\n        subtitle: \"We only need a few details and it won't affect your credit score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"loan-form-main-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(InputField, {\n        fieldLabel: \"First name\",\n        fieldValue: firstName,\n        fieldName: \"firstName\",\n        fieldError: formErrors.firstNameError,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: \"Surname\",\n        fieldValue: surname,\n        fieldName: \"surname\",\n        fieldError: formErrors.surnameError,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: \"Email\",\n        fieldValue: email,\n        fieldName: \"email\",\n        fieldError: formErrors.emailError,\n        fieldDetails: \"You must be director of limited company registered at Company House\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: \"Date of birth'\",\n        fieldValue: dateOfBirth,\n        fieldName: \"dateOfBirth\",\n        fieldDetails: \"You must be 18 years or older to apply for ezbob loan\",\n        fieldError: formErrors.dateOfBirthError,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: 'Residential postcode',\n        fieldValue: postcode,\n        fieldName: 'postcode',\n        fieldDetails: 'You must be UK resident',\n        fieldError: formErrors.postcodeError,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: 'Company name',\n        fieldValue: companyName,\n        fieldName: 'companyName',\n        fieldError: formErrors.companyNameError,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: 'Annual turnover',\n        fieldValue: annualTurnover,\n        fieldName: 'annualTurnover',\n        fieldDetails: 'Your company must have a current annual turnover of 15k or moret',\n        fieldError: formErrors.annualTurnoverError,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        fieldLabel: 'Loan ammount',\n        fieldValue: loanAmount,\n        fieldName: 'loanAmount',\n        fieldDetails: '£10,000 - £150,000',\n        fieldError: formErrors.loanAmountError,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(DropdownField, {\n        fieldLabel: 'Loan term',\n        fieldValue: loanTerm,\n        fieldName: 'loanTerm',\n        arrayOptions: this.generateMonthsOptions(),\n        fieldError: formErrors.loanTermError,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      })), React.createElement(FormConsentDetails, {\n        consentText: Data.loanForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"loan-form-submit-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"loan-form-submit-button\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Consent & Submit\"))));\n    }\n  }]);\n\n  return LoanForm;\n}(Component);\n\nexport default withRouter(LoanForm);","map":{"version":3,"sources":["C:\\Users\\natha\\Documents\\GitHub\\dh-loan-form\\src\\components\\loan-form.js"],"names":["React","Component","Postcode","ValidDate","withRouter","InputField","DropdownField","FormConsentDetails","FormHead","Data","checkEmailValidity","RegExp","checkNameValidiry","checkMoneyValidity","formValid","formErrors","rest","valid","Object","values","forEach","val","length","LoanForm","props","handleSubmit","e","preventDefault","stopPropagation","state","loanAmount","localStorage","setItem","loanTerm","setState","firstName","surname","dateOfBirth","email","postcode","companyName","annualTurnover","history","push","handleInputChange","event","target","value","name","firstNameError","test","surnameError","emailError","postcodeError","validate","countryPostcode","dateOfBirthError","checkUserMaturity","companyNameError","loanAmountError","annualTurnoverError","loanTermError","generateMonthsOptions","min","max","loanForm","sections","fields","field","minMonths","maxMonths","Array","from","keys","map","i","date","currentYear","Date","getFullYear","getUserBirthYear","split","ageCalculation","parseInt"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Postcode from 'postcode-validator';\r\nimport ValidDate from 'is-valid-date';\r\nimport {withRouter} from 'react-router-dom';\r\nimport InputField from './input-field';\r\nimport DropdownField from './dropdown-field';\r\nimport FormConsentDetails from './form-consent-details';\r\nimport FormHead from './form-head';\r\nimport '../styles/form-component/loan-form.scss';\r\nimport Data from '../assets/data/data.json';\r\n\r\nconst checkEmailValidity = RegExp(\r\n    // eslint-disable-next-line \r\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n);\r\n\r\nconst checkNameValidiry = RegExp(\r\n    // eslint-disable-next-line \r\n    /^[a-z ,.'-]+$/i\r\n);\r\n\r\nconst checkMoneyValidity = RegExp(\r\n    // eslint-disable-next-line \r\n    /^[0-9]+(\\.[0-9]{1,2})?$/\r\n)\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n    let valid = true;\r\n  \r\n    // validate form errors being empty\r\n    Object.values(formErrors).forEach(val => {\r\n      val.length > 0 && (valid = false);\r\n    });\r\n  \r\n    // validate the form was filled out\r\n    Object.values(rest).forEach(val => {\r\n      val === null && (valid = false);\r\n    });\r\n  \r\n    return valid;\r\n};\r\n\r\nclass LoanForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            surname: '',\r\n            dateOfBirth: '',\r\n            email: '',\r\n            postcode: '',\r\n            companyName: '',\r\n            annualTurnover: '',\r\n            loanAmount: '',\r\n            loanTerm: '',\r\n            countryPostcode: 'UK',\r\n            formErrors: {\r\n                firstNameError: '',\r\n                surnameError: '',\r\n                dateOfBirthError: '',\r\n                emailError: '',\r\n                postcodeError: '',\r\n                companyNameError: '',\r\n                annualTurnoverError: '',\r\n                loanAmountError: '',\r\n                loanTermError: '',\r\n            }\r\n          };\r\n    } \r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (formValid(this.state) && this.state.loanAmount >= 10000) {\r\n            localStorage.setItem('loanAmount',  this.state.loanAmount);\r\n            localStorage.setItem('loanTerm',  this.state.loanTerm);\r\n            this.setState({\r\n                firstName: '',\r\n                surname: '',\r\n                dateOfBirth: '',\r\n                email: '',\r\n                postcode: '',\r\n                companyName: '',\r\n                annualTurnover: '',\r\n                loanAmount: '',\r\n                loanTerm: '',\r\n            });\r\n            this.props.history.push('/approval');\r\n        } else {\r\n            this.props.history.push('/denied');\r\n        }\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const { value, name } = event.target;\r\n        let formErrors = { ...this.state.formErrors };\r\n\r\n        switch (name) {\r\n            case 'firstName':\r\n              formErrors.firstNameError =\r\n                value.length < 2 || (typeof value) !== 'string' || checkNameValidiry.test(value) === false ? 'Invalid name' : '';\r\n                if(value.length === 0) {formErrors.firstNameError = '';}\r\n              break;\r\n            case 'surname':\r\n              formErrors.surnameError =\r\n                value.length < 3 || (typeof value) !== 'string' || checkNameValidiry.test(value) === false ? 'Invalid name' : '';\r\n                if(value.length === 0) {formErrors.surnameError = '';}\r\n              break;\r\n            case 'email':\r\n              formErrors.emailError = checkEmailValidity.test(value) ? '' : 'Invalid email address';\r\n              if(value.length === 0) {formErrors.emailError = '';}\r\n              break;\r\n            case 'postcode':\r\n              formErrors.postcodeError = !(value.length >= 6 && value.length <= 8) && Postcode.validate(value, this.state.countryPostcode) === false ? 'Minimum 6 characaters required or invalid postcode' : '';\r\n              if(value.length === 0) {formErrors.postcodeError = '';}\r\n              break;\r\n            case 'dateOfBirth':\r\n                formErrors.dateOfBirthError = !this.checkUserMaturity(value) || !ValidDate(value) ? 'Date format is wrong or user is below age of 18' : '';\r\n                if(value.length === 0) {formErrors.dateOfBirthError = '';}\r\n              break;\r\n            case 'companyName':\r\n                formErrors.companyNameError = value.length < 3 ? 'Minimum 3 characaters required' : '';\r\n                if(value.length === 0) {formErrors.companyNameError = '';}\r\n              break;\r\n            case 'loanAmount':\r\n                formErrors.loanAmountError = checkMoneyValidity.test(value) === false ? 'Value need to be in numbers' : '';\r\n                if(value.length === 0) {formErrors.loanAmountError = '';}\r\n              break;\r\n            case 'annualTurnover':\r\n                formErrors.annualTurnoverError = checkMoneyValidity.test(value) === false ? 'Minimum turnover amount is 15 000' : '';\r\n                if(value.length === 0) {formErrors.annualTurnoverError = '';}\r\n              break;\r\n            case 'loanTerm':\r\n                formErrors.loanTermError = value === '' ? 'Please select repayment period' : '';\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n\r\n        this.setState({ formErrors, [name]: value });\r\n    }\r\n\r\n    // find values for the minimum and maximum loan month terms, if there are none in the data set default values\r\n    generateMonthsOptions = () => {\r\n        let min;\r\n        let max;\r\n        Data.loanForm.forEach(sections => {\r\n            sections.fields.forEach(field => {\r\n                ('minMonths' in field) ? min = field.minMonths : min = 12;\r\n                ('maxMonths' in field) ? max = field.maxMonths + 1 : max = 61;\r\n            });\r\n        });\r\n\r\n        return  Array.from(Array(max-min).keys()).map(i => min + i);\r\n     } \r\n\r\n    checkUserMaturity = (date) => {\r\n        const currentYear = new Date().getFullYear();\r\n        // eslint-disable-next-line \r\n        const getUserBirthYear = date.split(/[.,\\/ -]/);\r\n        const ageCalculation = parseInt(currentYear) - parseInt(getUserBirthYear[2]);\r\n        if( ageCalculation >= 18 && getUserBirthYear[2] > 1900) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            firstName,\r\n            surname,\r\n            dateOfBirth,\r\n            email,\r\n            postcode,\r\n            companyName,\r\n            annualTurnover, \r\n            loanAmount,\r\n            loanTerm,\r\n            formErrors} = this.state;\r\n\r\n        return (\r\n            <div className='loan-form'>\r\n                <FormHead\r\n                    title={'Get your Instant quote'}\r\n                    subtitle={`We only need a few details and it won't affect your credit score`}\r\n                />\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className='loan-form-main-content'>\r\n                        <InputField \r\n                            fieldLabel=\"First name\"\r\n                            fieldValue={firstName}\r\n                            fieldName=\"firstName\"\r\n                            fieldError={formErrors.firstNameError}\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                        <InputField \r\n                            fieldLabel=\"Surname\"\r\n                            fieldValue={surname}\r\n                            fieldName=\"surname\"\r\n                            fieldError={formErrors.surnameError}\r\n                            onChange={this.handleInputChange} />\r\n                        <InputField \r\n                            fieldLabel=\"Email\"\r\n                            fieldValue={email}\r\n                            fieldName=\"email\"\r\n                            fieldError={formErrors.emailError}\r\n                            fieldDetails=\"You must be director of limited company registered at Company House\"\r\n                            onChange={this.handleInputChange} />\r\n                        <InputField\r\n                            fieldLabel=\"Date of birth'\"\r\n                            fieldValue={dateOfBirth}\r\n                            fieldName=\"dateOfBirth\"\r\n                            fieldDetails=\"You must be 18 years or older to apply for ezbob loan\"\r\n                            fieldError={formErrors.dateOfBirthError}\r\n                            onChange={this.handleInputChange} />\r\n                        <InputField fieldLabel={'Residential postcode'}\r\n                                    fieldValue={postcode}\r\n                                    fieldName={'postcode'}\r\n                                    fieldDetails={'You must be UK resident'}\r\n                                    fieldError={formErrors.postcodeError}\r\n                                    onChange={this.handleInputChange} />\r\n                        <InputField fieldLabel={'Company name'}\r\n                                    fieldValue={companyName}\r\n                                    fieldName={'companyName'}\r\n                                    fieldError={formErrors.companyNameError}\r\n                                    onChange={this.handleInputChange} />\r\n                        <InputField fieldLabel={'Annual turnover'}\r\n                                    fieldValue={annualTurnover}\r\n                                    fieldName={'annualTurnover'}\r\n                                    fieldDetails={'Your company must have a current annual turnover of 15k or moret'}\r\n                                    fieldError={formErrors.annualTurnoverError}\r\n                                    onChange={this.handleInputChange} />\r\n                        <InputField fieldLabel={'Loan ammount'}\r\n                                    fieldValue={loanAmount}\r\n                                    fieldName={'loanAmount'}\r\n                                    fieldDetails={'£10,000 - £150,000'}\r\n                                    fieldError={formErrors.loanAmountError}\r\n                                    onChange={this.handleInputChange} />\r\n                        <DropdownField fieldLabel={'Loan term'}\r\n                                    fieldValue={loanTerm}\r\n                                    fieldName={'loanTerm'}\r\n                                    arrayOptions={this.generateMonthsOptions()}\r\n                                    fieldError={formErrors.loanTermError}\r\n                                    onChange={this.handleInputChange} />\r\n                    </div>\r\n\r\n                    <FormConsentDetails consentText={Data.loanForm}/>\r\n\r\n                    <div className='loan-form-submit-container'>\r\n                        <button className='loan-form-submit-button' type='submit'>\r\n                            Consent & Submit\r\n                        </button>\r\n                        \r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n  \r\n  export default withRouter(LoanForm);"]},"metadata":{},"sourceType":"module"}